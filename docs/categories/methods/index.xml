<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Methods on Learning CFEngine 3</title>
    <link>http://cf-learn.info/categories/methods/</link>
    <description>Recent content in Methods on Learning CFEngine 3</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Apr 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://cf-learn.info/categories/methods/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CFEngine tip #001: Modularize complex policies using methods: calls</title>
      <link>http://cf-learn.info/blog/cfengine-tip-001-modularize-complex-policies/</link>
      <pubDate>Mon, 23 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://cf-learn.info/blog/cfengine-tip-001-modularize-complex-policies/</guid>
      <description>Welcome to the new &#34;CFEngine tip&#34; series. In this series of posts I will explore different tips, tricks and techniques for making better use of CFEngine. For now I will post weekly, but the frequency may change as time goes by. If you have any suggestions for topics that I should cover in this series, pleaseÂ let me know! 
For our first installment, we will talk about methods: promises, and how they can be used to make policies both clearer and more extensible.</description>
    </item>
    
  </channel>
</rss>